name: Stress Tests - 1 Million Message FIFO

on:
  workflow_call:
  workflow_dispatch:

env:
  FLINKDOTNET_STANDARD_TEST_MESSAGES: "1000000"
  MAX_ALLOWED_TIME_MS: "300000"

jobs:
  run-stress-tests:
    name: Run 1 Million Message FIFO Stress Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Docker is running
        run: docker info

      - name: Set up .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-solutions

      - name: Ensure build assemblies
        shell: bash
        run: |
          if [ ! -f Sample/FlinkDotNet.Aspire.IntegrationTests/bin/Release/net9.0/FlinkDotNet.Aspire.IntegrationTests.dll ]; then
            echo "Build artifacts missing. Building solutions..."
            dotnet restore FlinkDotNet/FlinkDotNet.sln
            dotnet restore Sample/Sample.sln
            dotnet build FlinkDotNet/FlinkDotNet.sln --configuration Release
            dotnet build Sample/Sample.sln --configuration Release
          fi

      - name: Run BDD Stress Test Scenarios with ReqNRoll
        timeout-minutes: 30
        env:
          FLINKDOTNET_STANDARD_TEST_MESSAGES: "1000000"
          INTEGRATION_TEST_MODE: "STRESS"
          GITHUB_ACTIONS: "true"
          ALLURE_RESULTS_DIRECTORY: "allure-results"
        run: |
          Write-Host "üé≠ Running BDD Stress Test Scenarios with ReqNRoll..." -ForegroundColor Green
          Write-Host "üìã Executing Feature: Stress Test - High Throughput Message Processing" -ForegroundColor Cyan
          
          # Set environment variables for stress testing
          $env:FLINKDOTNET_STANDARD_TEST_MESSAGES = "1000000"
          $env:INTEGRATION_TEST_MODE = "STRESS" 
          $env:GITHUB_ACTIONS = "true"
          $env:ALLURE_RESULTS_DIRECTORY = "allure-results"
          
          # Run BDD stress test scenarios - let ReqNRoll show native BDD output
          try {
              Write-Host "üöÄ Scenario Execution: Starting BDD stress test scenarios..." -ForegroundColor Yellow
              Write-Host "  üìä ReqNRoll BDD framework will display full Given/When/Then step execution" -ForegroundColor Cyan
              
              # Run BDD scenarios from ReqNRoll feature files - display full Given/When/Then step execution
              dotnet test Sample/FlinkDotNet.Aspire.IntegrationTests/FlinkDotNet.Aspire.IntegrationTests.csproj --configuration Release --logger "console;verbosity=detailed" --logger trx --verbosity minimal --no-build --filter "Category=stress"
              
            if ($LASTEXITCODE -ne 0) {
              Write-Host "‚ùå BDD stress test scenarios failed" -ForegroundColor Red
              throw "BDD stress test scenarios failed - see ReqNRoll output above"
            } else {
              Write-Host "üéâ All BDD stress test scenarios passed!" -ForegroundColor Green
              Write-Host "  üìä Allure BDD test reports generated from C# code" -ForegroundColor Cyan
            }
          }
          catch {
            Write-Host "‚ùå BDD stress test execution failed: $_" -ForegroundColor Red
            throw
          }

      - name: Upload BDD test results and Allure reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bdd-stress-test-results
          path: |
            **/*.trx
            **/allure-results/**
            **/allure-report/**
            Sample/FlinkDotNet.Aspire.IntegrationTests/bin/Release/net9.0/allure-results/**
            Sample/FlinkDotNet.Aspire.IntegrationTests/bin/Release/net9.0/allure-report/**
